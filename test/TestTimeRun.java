package test;

import tsp_algorithms.BruteForce;
import tsp_algorithms.NearestNeighbor;
import tsp_algorithms.SimulatedAnnealing;
import tsp_algorithms.TwoOpt;

public class TestTimeRun {
    public static void main(String[] args) {
        BruteForce bruteForce = new BruteForce();
        NearestNeighbor neighbor = new NearestNeighbor();
        SimulatedAnnealing simulatedAnnealing = new SimulatedAnnealing();
        TwoOpt twoOpt = new TwoOpt();
        double[][] matrix = {
                {0.0,721.4,527.6,150.6,483.9,201.4,210.1,947.8,437.6,946.3,98.0,731.3,518.6,328.1,91.8},
                {264.2,0.0,385.0,546.4,174.6,132.1,752.2,624.9,857.0,376.7,187.0,226.2,973.5,633.9,35.9},
                {622.4,945.6,0.0,357.9,924.0,335.4,273.7,396.0,46.8,412.6,204.1,652.1,304.7,40.5,225.9},
                {825.4,176.2,214.0,0.0,297.7,244.8,114.7,478.9,478.6,632.0,165.3,341.9,941.8,222.0,446.3},
                {804.9,188.0,43.3,117.2,0.0,620.8,643.6,320.8,462.8,289.8,726.7,900.6,764.7,523.5,895.8},
                {315.3,701.5,883.3,159.2,610.8,0.0,121.9,571.7,12.5,338.1,169.3,899.6,800.3,174.0,899.8},
                {783.4,51.0,483.9,734.8,735.6,421.6,0.0,761.8,313.3,203.1,508.0,292.8,570.7,783.2,924.0},
                {568.6,159.6,798.1,734.8,961.5,649.9,945.1,0.0,542.0,906.5,296.8,258.6,259.6,379.6,551.3},
                {413.7,895.9,769.8,900.9,484.1,461.3,338.8,75.7,0.0,624.8,458.9,338.6,130.9,793.2,283.9},
                {512.6,429.0,544.6,255.0,146.7,80.3,141.3,934.6,54.7,0.0,975.3,701.6,854.4,884.4,144.6},
                {880.8,756.0,912.4,812.9,622.2,983.1,59.8,183.0,850.2,713.7,0.0,204.4,678.5,581.1,311.8},
                {992.4,103.4,825.9,191.7,259.5,933.7,826.3,242.5,858.7,750.0,623.0,0.0,36.0,163.7,635.5},
                {689.4,757.5,765.5,222.1,379.5,38.5,914.6,947.5,239.8,648.1,72.0,2.5,0.0,809.1,302.1},
                {529.4,394.0,395.4,689.1,433.2,526.0,458.4,178.4,704.9,711.2,647.4,575.4,288.5,0.0,64.3},
                {253.1,720.3,876.8,299.6,811.3,687.8,766.5,59.4,868.5,839.5,776.8,531.5,463.2,3.1,0.0}
        };
        long start = System.currentTimeMillis();
        bruteForce.optimalPath(matrix);
//        neighbor.optimalPath(matrix);
//        twoOpt.optimalPath(matrix);
//        simulatedAnnealing.optimalPath(matrix);
        long end = System.currentTimeMillis();
        System.out.println(end-start);
    }


}
